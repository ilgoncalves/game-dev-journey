#include "Character.h"

#include <chrono>
#include <iostream>
#include <random>

using std::cout;
using std::endl;

// Function to generate random strength
int generateRandomStrength(int min_strength, int max_strength) {
  // Obtain a seed from the system clock:
  unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();

  // Using Mersenne Twister algorithm to generate random numbers
  std::mt19937 generator(seed);

  // Using a distribution to transform the random values generated by the
  // Mersenne Twister into an integer range [min_strength, max_strength]
  std::uniform_int_distribution<int> distribution(min_strength, max_strength);

  // Generate a random strength
  return distribution(generator);
}

Character::Character(string name) : name(name) {
  strength = generateRandomStrength(0, 1000);
  cout << "Character successfully created" << endl;

  cout << "Strength: " << strength << endl;
}

void Character::receiveAttack(Character& charater) {
  int damage = charater.strength - this->strength;

  if (damage >= 0) {
    if (health > 0) {
      health = health - (damage > health ? health : damage);
      cout << "Successful attack" << endl;
      cout << "Damage: " << damage << endl;
      if (health <= 0) {
        cout << this->name << " died" << endl;
      }
    } else {
      cout << this->name << " is dead" << endl;
    }

  } else {
    this->defend();
  }
}

void Character::displayLife() {
  cout << this->name << " life: " << health << "%" << endl;
}